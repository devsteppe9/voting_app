name: Build images and push to registry

# TODO: Detect only changed subproject and build only that image

on:
  push:
    branches:
      - feat-actions

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

permissions:
  contents: write

jobs:
  build-result-app:
    # runs-on: ubuntu-latest
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            result
            .github/workflows
            docker-compose.yml
            k8s-specifications/result-deployment.yaml


      # Better to login first and fail early if credentials are wrong
      - name: Log in to DockerHub
        run: echo "${{ env.DOCKERHUB_TOKEN }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin
      
      - name: Build image
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: docker-compose.yml
          services: "result"
      
      - name: Tag and push image to Docker Hub
        run: |
          docker tag voting_app-result ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:${{ github.sha }}
          docker push ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:${{ github.sha }}

      - name: Update Kubernetes deployment
        # Replace image tag in deployment.yaml with new Docker image tagged by commit SHA
        run: |
          sed -i "s|image: ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:.*|image: ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:${{ github.sha }}|g" k8s-specifications/result-deployment.yaml
          echo "Updated image in k8s-specifications/result-deployment.yaml"
      
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add k8s-specifications/result-deployment.yaml
          git commit -m "Update result deployment image to ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:${{ github.sha }}"
          git push origin feat-actions

      - name: Clean up
        run: |
          docker rmi ${{ env.DOCKERHUB_USERNAME }}/voting_app-result:${{ github.sha }} || true
          docker rmi voting_app-result || true
          docker system prune -f --volumes || true